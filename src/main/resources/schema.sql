-- создаём таблицу users (с пользователями):
CREATE TABLE IF NOT EXISTS users(
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name varchar(40) NOT NULL,
    email varchar(100) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (user_id),
    CONSTRAINT uq_user_email UNIQUE (email)
);

-- создаём таблицу item_requests (запросы от пользователей на предмет):
CREATE TABLE IF NOT EXISTS item_requests(
    request_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    user_id BIGINT NOT NULL,
    description varchar(200) NOT NULL,
    creation_date timestamp,
    CONSTRAINT pk_item_request PRIMARY KEY (request_id),
    CONSTRAINT fk_item_requests_to_users FOREIGN KEY (user_id) REFERENCES users(user_id)
    ON DELETE CASCADE ON UPDATE CASCADE
);

-- создаём таблицу items (с предметами):
CREATE TABLE IF NOT EXISTS items(
   item_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
   name varchar(40) NOT NULL,
   description varchar(200) NOT NULL,
   available boolean NOT NULL,
   user_id BIGINT NOT NULL,
   request_id BIGINT,
   CONSTRAINT pk_item PRIMARY KEY (item_id),
   CONSTRAINT fk_items_to_users FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
   CONSTRAINT fk_items_to_item_requests FOREIGN KEY (request_id) REFERENCES item_requests(request_id)
   ON DELETE CASCADE ON UPDATE CASCADE
);

-- создаём таблицу bookings (аренда предметов):
CREATE TABLE IF NOT EXISTS bookings(
    booking_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    status varchar(10),
    start_date timestamp,
    end_date timestamp,
    user_id BIGINT NOT NULL,
    item_id BIGINT NOT NULL,
    CONSTRAINT pk_booking PRIMARY KEY (booking_id),
    CONSTRAINT fk_bookings_to_users FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_bookings_to_items FOREIGN KEY (item_id) REFERENCES items(item_id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- создаём таблицу comments (комментарии пользователей для предметов):
CREATE TABLE IF NOT EXISTS comments(
    comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    text varchar(500),
    item_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    creation_date timestamp,
    CONSTRAINT pk_comments PRIMARY KEY (comment_id),
    CONSTRAINT fk_comments_to_users FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_comments_to_items FOREIGN KEY (item_id) REFERENCES items(item_id) ON DELETE CASCADE ON UPDATE CASCADE
);